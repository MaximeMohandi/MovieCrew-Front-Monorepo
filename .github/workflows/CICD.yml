name: Test, Quality Check and Deploy

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  Tests_and_Quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    env:
      NODE_ENV: "test"
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: install dependencies
        run: yarn install --frozen-lockfile
      - name: tests
        run: yarn turbo test
      - name: lint
        run: yarn turbo lint

  deploy:
    needs:
      - Tests_and_Quality
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME  }}
          tags: |
            type=ref,event=branch

      - name: Debug Docker Metadata
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"

      - name: Build Docker Image
        run: |
          docker build -f ./apps/moviecrew-discordbot/Dockerfile . -t ${{ steps.meta.outputs.tags }}

      - name: Push Docker Image
        run: |
          docker push ${{ steps.meta.outputs.tags }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
